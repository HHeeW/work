[{"C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\index.js":"1","C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\App.js":"2","C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\Snake.jsx":"3","C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\Food.jsx":"4","C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\index.js":"5","C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\App.js":"6","C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\component\\RestList.jsx":"7","C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\component\\RestListItem.jsx":"8"},{"size":210,"mtime":1653006954451,"results":"9","hashOfConfig":"10"},{"size":3137,"mtime":1653014393318,"results":"11","hashOfConfig":"10"},{"size":428,"mtime":1653007795371,"results":"12","hashOfConfig":"10"},{"size":246,"mtime":1653010667959,"results":"13","hashOfConfig":"10"},{"size":268,"mtime":1653523217131,"results":"14","hashOfConfig":"15"},{"size":178,"mtime":1653545461683,"results":"16","hashOfConfig":"15"},{"size":1084,"mtime":1653550980265,"results":"17","hashOfConfig":"15"},{"size":1147,"mtime":1653550927161,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"asimaf",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1wy6rre",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\index.js",[],[],"C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\App.js",["45","46","47","48","49","50"],[],"import React, { Component } from 'react'\nimport Snake from './Snake'\nimport Food from './Food'\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x, y];\n}\n\nconst initialState = {\n     food: getRandomCoordinates(),\n     speed: 200,\n     direction: 'RIGHT',\n     snakeDots: [\n       [0,0],\n       [2,0]\n     ] \n}\nexport default class App extends Component {\n   \n  state = initialState;\n\n  componentDidMount(){\n     setInterval(this.moveSnake, this.state.speed);\n     document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate(){\n     this.checkIfOutBorders();\n     this.checkIfCollapsed();   \n     this.checkIfEat();\n  }\n\n  onKeyDown = (e) => {\n     e = e || window.event;\n     switch(e.keyCode) {\n        case 37:\n          this.setState({direction: 'LEFT'});\n          break;\n        case 38:\n          this.setState({direction: 'UP'});\n          break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n        case 40:\n          this.setState({direction: 'DOWN'});\n          break;          \n     }\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n       case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n       break;\n       case 'LEFT':\n          head = [head[0] -2, head[1]];\n       break;\n       case 'DOWN':\n          head = [head[0], head[1] + 2];\n       break;\n       case 'UP':\n          head = [head[0], head[1] - 2];\n       break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n       snakeDots: dots\n    })\n  }\n\n  checkIfOutBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0 ) {\n       this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n     let snake = [...this.state.snakeDots];\n     let head = snake[snake.length -1];\n     snake.pop();\n     snake.forEach(dot => {\n        if(head[0] == dot[0] && head[1] == dot[1]) {\n          this.onGameOver()\n        }\n      }) \n   \n  }\n\n  checkIfEat() {\n     let head = this.state.snakeDots[this.state.snakeDots.length -1];\n     let food = this.state.food;\n     if(head[0] == food[0] && head[1] == food[1]) {\n         this.setState({\n            food: getRandomCoordinates()\n         })\n         this.enlargeSnake();\n         this.increaseSpeed();\n     }\n  }\n\n  enlargeSnake() {\n     let newSnake = [...this.state.snakeDots];\n     newSnake.unshift([]);\n     this.setState({\n        snakeDots: newSnake\n     })\n  }\n\n  increaseSpeed() {\n      if(this.state.speed > 10) {\n          this.setState({\n              speed : this.state.speed - 10\n          })\n      }\n  }\n\n  onGameOver() {\n     alert(`게임오버!! Snake length is ${this.state.snakeDots.length}`);\n     this.setState(initialState)\n  }\n\n  render() {\n    return (\n      <div className=\"game-area\">\n          <Snake snakeDots={this.state.snakeDots}/>\n          <Food dot={this.state.food} />\n      </div>\n    )\n  }\n}","C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\Snake.jsx",[],[],"C:\\Hee\\github\\work\\Web\\React\\game-snake\\src\\Food.jsx",[],[],"C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\index.js",[],[],[],"C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\App.js",[],[],"C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\component\\RestList.jsx",["51"],[],"C:\\Hee\\github\\work\\Web\\React\\myrestaurant\\src\\component\\RestListItem.jsx",["52"],[],{"ruleId":"53","severity":1,"message":"54","line":38,"column":6,"nodeType":"55","messageId":"56","endLine":51,"endColumn":7},{"ruleId":"53","severity":1,"message":"54","line":57,"column":5,"nodeType":"55","messageId":"56","endLine":70,"endColumn":6},{"ruleId":"57","severity":1,"message":"58","line":90,"column":20,"nodeType":"59","messageId":"60","endLine":90,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":90,"column":41,"nodeType":"59","messageId":"60","endLine":90,"endColumn":43},{"ruleId":"57","severity":1,"message":"58","line":100,"column":17,"nodeType":"59","messageId":"60","endLine":100,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":100,"column":39,"nodeType":"59","messageId":"60","endLine":100,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":14,"column":5,"nodeType":"63","endLine":14,"endColumn":7,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"62","line":13,"column":6,"nodeType":"63","endLine":13,"endColumn":8,"suggestions":"65"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rest'. Either include it or remove the dependency array. You can also do a functional update 'setRest(r => ...)' if you only need 'rest' in the 'setRest' call.","ArrayExpression",["66"],["67"],{"desc":"68","fix":"69"},{"desc":"68","fix":"70"},"Update the dependencies array to be: [rest]",{"range":"71","text":"72"},{"range":"73","text":"72"},[384,386],"[rest]",[392,394]]