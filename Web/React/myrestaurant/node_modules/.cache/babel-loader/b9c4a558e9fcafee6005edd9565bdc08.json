{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hee\\\\github\\\\work\\\\Web\\\\React\\\\game-snake\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Food from './Food';\nimport Snake from './Snake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  snakeDots: [[0, 0], [2, 0]]\n};\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.onkeydown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n\n        default:\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onkeydown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutBorders();\n  }\n\n  checkIfOutBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n  }\n\n  onGameOver() {\n    alert(`게임오버!!! Snake Length is ${this.state.snakeDots.length}`);\n    this.setState(initialState);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(Snake, {\n        snakeDots: this.state.snakeDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Food, {\n        dot: this.state.food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Food","Snake","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","snakeDots","App","state","onkeydown","e","window","event","keyCode","setState","direction","moveSnake","dots","head","length","push","shift","componentDidMount","setInterval","document","componentDidUpdate","checkIfOutBorders","onGameOver","checkIfCollapsed","snake","alert","render"],"sources":["C:/Hee/github/work/Web/React/game-snake/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Food from './Food'\nimport Snake from './Snake'\n\nconst getRandomCoordinates = ()=>{\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max - min+1)+min)/2)*2;\n  let y = Math.floor((Math.random()*(max - min+1)+min)/2)*2;\n  return[x, y]\n}\nconst initialState={\n  food: getRandomCoordinates(),\n  speed:200,\n  snakeDots:[\n    [0,0],\n    [2,0]\n  ]\n}\nexport default class App extends Component {\n  state= initialState;\n\n  componentDidMount(){\n    setInterval(this.moveSnake, this.state.speed)\n    document.onkeydown = this.onkeydown;\n  }\n  \n  componentDidUpdate(){\n    this.checkIfOutBorders();\n  }\n\n  onkeydown = (e)=>{\n    e = e||window.event;\n    switch(e.keyCode){\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      default: break;\n    }\n  }\n  moveSnake = () =>{\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    \n    switch(this.state.direction){\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n      break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n      break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n      break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n      break;\n      default: break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots\n    })\n  }\n  checkIfOutBorders(){\n    let head = this.state.snakeDots[this.state.snakeDots.length-1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0){\n      this.onGameOver();\n    }\n  }\n  checkIfCollapsed(){\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length -1]\n  }\n  onGameOver(){\n    alert(`게임오버!!! Snake Length is ${this.state.snakeDots.length}`);\n    this.setState(initialState);\n  }\n  render() {\n    return (\n      <div className='game-area'>\n        <Snake snakeDots={this.state.snakeDots}/>\n        <Food dot={this.state.food} />\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}