{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hee\\\\github\\\\work\\\\Web\\\\React\\\\game-snake\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [2, 0]]\n};\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  checkIfOutBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.onGameOver();\n      }\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n\n  onGameOver() {\n    alert(`게임오버!! Snake length is ${this.state.snakeDots.length}`);\n    this.setState(initialState);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(Snake, {\n        snakeDots: this.state.snakeDots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Food, {\n        dot: this.state.food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Snake","Food","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","checkIfOutBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","pop","forEach","dot","enlargeSnake","increaseSpeed","newSnake","unshift","alert","render"],"sources":["C:/Hee/github/work/Web/React/game-snake/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Snake from './Snake'\nimport Food from './Food'\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x, y];\n}\n\nconst initialState = {\n     food: getRandomCoordinates(),\n     speed: 200,\n     direction: 'RIGHT',\n     snakeDots: [\n       [0,0],\n       [2,0]\n     ] \n}\nexport default class App extends Component {\n   \n  state = initialState;\n\n  componentDidMount(){\n     setInterval(this.moveSnake, this.state.speed);\n     document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate(){\n     this.checkIfOutBorders();\n     this.checkIfCollapsed();   \n     this.checkIfEat();\n  }\n\n  onKeyDown = (e) => {\n     e = e || window.event;\n     switch(e.keyCode) {\n        case 37:\n          this.setState({direction: 'LEFT'});\n          break;\n        case 38:\n          this.setState({direction: 'UP'});\n          break;\n        case 39:\n          this.setState({direction: 'RIGHT'});\n          break;\n        case 40:\n          this.setState({direction: 'DOWN'});\n          break;          \n     }\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    switch (this.state.direction) {\n       case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n       break;\n       case 'LEFT':\n          head = [head[0] -2, head[1]];\n       break;\n       case 'DOWN':\n          head = [head[0], head[1] + 2];\n       break;\n       case 'UP':\n          head = [head[0], head[1] - 2];\n       break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n       snakeDots: dots\n    })\n  }\n\n  checkIfOutBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if(head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0 ) {\n       this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n     let snake = [...this.state.snakeDots];\n     let head = snake[snake.length -1];\n     snake.pop();\n     snake.forEach(dot => {\n        if(head[0] == dot[0] && head[1] == dot[1]) {\n          this.onGameOver()\n        }\n      }) \n   \n  }\n\n  checkIfEat() {\n     let head = this.state.snakeDots[this.state.snakeDots.length -1];\n     let food = this.state.food;\n     if(head[0] == food[0] && head[1] == food[1]) {\n         this.setState({\n            food: getRandomCoordinates()\n         })\n         this.enlargeSnake();\n         this.increaseSpeed();\n     }\n  }\n\n  enlargeSnake() {\n     let newSnake = [...this.state.snakeDots];\n     newSnake.unshift([]);\n     this.setState({\n        snakeDots: newSnake\n     })\n  }\n\n  increaseSpeed() {\n      if(this.state.speed > 10) {\n          this.setState({\n              speed : this.state.speed - 10\n          })\n      }\n  }\n\n  onGameOver() {\n     alert(`게임오버!! Snake length is ${this.state.snakeDots.length}`);\n     this.setState(initialState)\n  }\n\n  render() {\n    return (\n      <div className=\"game-area\">\n          <Snake snakeDots={this.state.snakeDots}/>\n          <Food dot={this.state.food} />\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}